# Generated by Django 5.2.5 on 2025-08-22 05:04

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('is_unlimited', models.BooleanField(default=False, verbose_name='Бессрочный')),
                ('duration_days', models.PositiveIntegerField(default=30, verbose_name='Длительность (дней)')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Тип абонемента',
                'verbose_name_plural': 'Типы абонементов',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('photo', models.ImageField(upload_to='client_photos/', verbose_name='Фотография')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('face_id', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Face ID')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время прохода')),
                ('access_granted', models.BooleanField(default=False, verbose_name='Доступ разрешен')),
                ('reason', models.CharField(blank=True, max_length=255, verbose_name='Причина отказа')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='core.client', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Лог прохода',
                'verbose_name_plural': 'Логи проходов',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата покупки')),
                ('paid_visits', models.PositiveIntegerField(default=0, verbose_name='Оплачено посещений')),
                ('used_visits', models.PositiveIntegerField(default=0, verbose_name='Использовано посещений')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('last_visit', models.DateTimeField(blank=True, null=True, verbose_name='Последнее посещение')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='core.client', verbose_name='Клиент')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.subscriptiontype', verbose_name='Тип абонемента')),
            ],
            options={
                'verbose_name': 'Абонемент',
                'verbose_name_plural': 'Абонементы',
            },
        ),
    ]
